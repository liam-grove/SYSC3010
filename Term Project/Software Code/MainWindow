package gem;

import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Nirda
 */
public class MainWindow extends javax.swing.JFrame {
    
    /**
     * Creates new form Main
     */
    public MainWindow() {
        initComponents();
        Thread object = new Thread(new UDPClient());
        object.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        PanelB = new javax.swing.JPanel();
        TempLabel = new javax.swing.JLabel();
        HumidityLabel = new javax.swing.JLabel();
        LightLabel = new javax.swing.JLabel();
        CurrentHumidityLabel = new javax.swing.JLabel();
        CurrentLightLabel = new javax.swing.JLabel();
        CreateReportButton = new javax.swing.JButton();
        CurrentTempLabel = new javax.swing.JLabel();
        ChangeOptimalButton = new javax.swing.JButton();
        CurrentConditionsLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(200, 220));
        setPreferredSize(new java.awt.Dimension(820, 450));
        setResizable(false);

        PanelB.setBackground(new java.awt.Color(36, 47, 65));
        PanelB.setForeground(new java.awt.Color(0, 102, 255));

        TempLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        TempLabel.setForeground(new java.awt.Color(204, 204, 204));
        TempLabel.setText("Temperature (Â°C):");

        HumidityLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        HumidityLabel.setForeground(new java.awt.Color(204, 204, 204));
        HumidityLabel.setText("Humidity:");

        LightLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        LightLabel.setForeground(new java.awt.Color(204, 204, 204));
        LightLabel.setText("Hours of Light: ");

        CurrentHumidityLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        CurrentHumidityLabel.setForeground(new java.awt.Color(255, 255, 255));

        CurrentLightLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        CurrentLightLabel.setForeground(new java.awt.Color(255, 255, 255));

        CreateReportButton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        CreateReportButton.setText("Create Report");
        CreateReportButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        CreateReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateReportButtonActionPerformed(evt);
            }
        });

        CurrentTempLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        CurrentTempLabel.setForeground(new java.awt.Color(255, 255, 255));

        ChangeOptimalButton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        ChangeOptimalButton.setText("Change Optimal Conditons");
        ChangeOptimalButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        ChangeOptimalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeOptimalButtonActionPerformed(evt);
            }
        });

        CurrentConditionsLabel.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        CurrentConditionsLabel.setForeground(new java.awt.Color(204, 204, 204));
        CurrentConditionsLabel.setText("Current Conditions ");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 0));
        jLabel2.setText("Green - Conditions Okay");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 0, 0));
        jLabel4.setText("Red - Conditions suboptimal");

        javax.swing.GroupLayout PanelBLayout = new javax.swing.GroupLayout(PanelB);
        PanelB.setLayout(PanelBLayout);
        PanelBLayout.setHorizontalGroup(
            PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(CurrentConditionsLabel)
                .addGap(64, 64, 64))
            .addGroup(PanelBLayout.createSequentialGroup()
                .addGroup(PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelBLayout.createSequentialGroup()
                        .addGroup(PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelBLayout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(TempLabel))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(HumidityLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(LightLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(CurrentLightLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106)
                        .addGroup(PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CurrentHumidityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CurrentTempLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(PanelBLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(CreateReportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(PanelBLayout.createSequentialGroup()
                .addGroup(PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelBLayout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addGroup(PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(PanelBLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(ChangeOptimalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelBLayout.setVerticalGroup(
            PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(CurrentConditionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TempLabel)
                    .addComponent(CurrentTempLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HumidityLabel)
                    .addComponent(CurrentHumidityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LightLabel)
                    .addComponent(CurrentLightLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(1, 1, 1)
                .addComponent(jLabel4)
                .addGap(25, 25, 25)
                .addComponent(ChangeOptimalButton)
                .addGap(18, 18, 18)
                .addComponent(CreateReportButton)
                .addGap(57, 57, 57))
        );

        jPanel1.setPreferredSize(new java.awt.Dimension(211, 380));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gem/photoside (1).jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 62, Short.MAX_VALUE))
        );

        jPanel2.setPreferredSize(new java.awt.Dimension(211, 380));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gem/photoside (1).jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(PanelB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void CreateReportButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                   

    }                                                  

    private void ChangeOptimalButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        dispose();
        try {
            new OptimalConditions().setVisible(true);
        } 
        catch (ClassNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (SQLException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the Main Window*/
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);

            }
        });
    }
    
    /**
     * This method is used to update the current conditions shown to the user in the Main Window
     * @param t
     * @param h
     * @param l
     * @throws SQLException 
     */
    public static void updateCurrent(float t, float h, int l) throws SQLException 
    {
        //Initializing the ideal temperature, humidity and the lightlevel before the try-catch statement
        float idealTemp = 0;
        float idealHumidity = 0;
        int idealLight = 0;

        try{
            /*
            The ideal temperatures that the user previously inputed are collected from the 
            database first to be used in the comparison with the current conditions
            */
            String query1 = "SELECT Optimal_Temperature FROM optimal_conditions";
            ResultSet rs1 = LinkJavaMySQL.selectQuery(query1);
            while(rs1.next()){
                idealTemp = rs1.getFloat("Optimal_Temperature");
            }
            
            String query2 = "SELECT Optimal_Humidity FROM optimal_conditions";
            ResultSet rs2 = LinkJavaMySQL.selectQuery(query2);
            while(rs2.next()){
                idealHumidity = rs2.getFloat("Optimal_Humidity");
            }
            
            String query3 = "SELECT Optimal_LightLevel FROM optimal_conditions";
            ResultSet rs3 = LinkJavaMySQL.selectQuery(query3);
            while(rs3.next()){
                idealLight = rs3.getInt("Optimal_LightLevel");               
            }
            
            /*
            A check to see if the temperature reading is within a certain range given the optimal conditions
            for the temperature, humidity and the light level
            */
            if((t < (idealTemp + 5)) & (t > (idealTemp - 5))){
                CurrentTempLabel.setText(String.valueOf(t));
                CurrentTempLabel.setForeground(Color.green);
            }
            else{
                CurrentTempLabel.setText(String.valueOf(t));
                CurrentTempLabel.setForeground(Color.red);
            }
            
            if((h < (idealHumidity + 10)) & (h > (idealHumidity - 10))){
                CurrentHumidityLabel.setText(String.valueOf(h));
                CurrentHumidityLabel.setForeground(Color.green);
            }
            else{
                CurrentHumidityLabel.setText(String.valueOf(h));
                CurrentHumidityLabel.setForeground(Color.red);
            }
            
            if((l < (idealLight + 100)) &(l > (idealLight - 100))){ 
                CurrentLightLabel.setText(String.valueOf(l));
                CurrentLightLabel.setForeground(Color.green);
            }
            else{
                CurrentLightLabel.setText(String.valueOf(l));
                CurrentLightLabel.setForeground(Color.red);
            }
        } 
        catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }

  }

    // Variables declaration - do not modify                     
    private javax.swing.JButton ChangeOptimalButton;
    private javax.swing.JButton CreateReportButton;
    private javax.swing.JLabel CurrentConditionsLabel;
    private static javax.swing.JLabel CurrentHumidityLabel;
    private static javax.swing.JLabel CurrentLightLabel;
    private static javax.swing.JLabel CurrentTempLabel;
    private javax.swing.JLabel HumidityLabel;
    private javax.swing.JLabel LightLabel;
    private javax.swing.JPanel PanelB;
    private javax.swing.JLabel TempLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration                   

   

}
